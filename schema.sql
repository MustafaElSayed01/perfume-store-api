Table user_types { id bigint [pk, increment, not null] name varchar(50) [unique, not null] description text is_active boolean [default: true] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp } Table permissions { id bigint [pk, increment, not null] name varchar(100) [unique, not null] description text created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp } Table role_permissions { id bigint [pk, increment, not null] user_type_id bigint [not null, ref: > user_types.id] permission_id bigint [not null, ref: > permissions.id] indexes { (user_type_id, permission_id) [unique] } } Table users { id bigint [pk, increment, not null] user_type_id bigint [not null, ref: > user_types.id, default: 1] first_name varchar(100) [not null] last_name varchar(100) [not null] email varchar(255) [unique, not null] password varchar(255) [not null] / / Laravel - friendly column name phone varchar(20) date_of_birth date email_verified_at timestamp is_active boolean [default: true] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp indexes { email user_type_id phone } } Table product_types { id bigint [pk, increment, not null] name varchar(100) [not null] slug varchar(120) [unique, not null] description text parent_id bigint [ref: > product_types.id] is_active boolean [default: true] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] indexes { slug } } Table products { id bigint [pk, increment, not null] name varchar(200) [not null] slug varchar(220) [unique, not null] description text product_type_id bigint [not null, ref: > product_types.id] gender enum('male', 'female', 'unisex') [default: 'unisex'] price decimal(10, 2) [not null] stock_quantity int [default: 0] is_active boolean [default: true] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp indexes { slug product_type_id price } } Table addresses { id bigint [pk, increment, not null] user_id bigint [not null, ref: > users.id] type enum('home', 'work', 'other') [default: 'home'] street varchar(255) [not null] city varchar(100) [not null] postal_code varchar(20) country varchar(100) [not null] is_default boolean [default: false] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp indexes { user_id } } Table carts { id bigint [pk, increment, not null] user_id bigint [not null, ref: > users.id] session_id varchar(255) created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp indexes { user_id session_id } } Table cart_items { id bigint [pk, increment, not null] cart_id bigint [not null, ref: > carts.id] product_id bigint [not null, ref: > products.id] quantity int [not null] / / keep quantity reasonably typed price decimal (10, 2) created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] deleted_at timestamp indexes { (cart_id, product_id) [unique] cart_id } } Table orders { id bigint [pk, increment, not null] order_number varchar(40) [unique, not null] / / made length a bit more flexible user_id bigint [not null, ref: > users.id] cart_id bigint [not null, ref: > carts.id] status enum(
    'pending',
    'confirmed',
    'processing',
    'shipped',
    'delivered',
    'cancelled'
) [default: 'pending'] total_amount decimal(10, 2) [not null] shipping_amount decimal(10, 2) [default: 0] tax_amount decimal(10, 2) [default: 0] final_amount decimal(10, 2) [not null] shipping_address_id bigint [ref: > addresses.id] billing_address_id bigint [ref: > addresses.id] created_at timestamp [default: `current_timestamp`] updated_at timestamp [default: `current_timestamp`] indexes { user_id status } } Table order_items { id bigint [pk, increment, not null] order_id bigint [not null, ref: > orders.id] product_id bigint [not null, ref: > products.id] quantity int [not null] unit_price decimal(10, 2) [not null] total_price decimal(10, 2) [not null] indexes { order_id } }
